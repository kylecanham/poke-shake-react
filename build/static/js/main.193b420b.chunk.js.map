{"version":3,"sources":["components/Search.jsx","services/getPokemon.js","services/getTranslation.js","pages/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Search","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","search","setSearch","react_default","a","createElement","Container","Form","className","Group","Control","onChange","e","target","value","type","placeholder","Button","block","onClick","getPokemon","baseUrl","query","pokemon","fetchPokemon","_x","_fetchPokemon","apply","this","arguments","_callee","regenerator_default","wrap","_context","prev","next","abrupt","fetch","concat","stop","contents","fetchTranslation","_fetchTranslation","translation","HomePage","desc","setPokemon","_React$useState3","_React$useState4","loading","setLoading","_React$useState5","_React$useState6","setTranslation","_ref","asyncToGenerator","mark","response","results","resp","res","sent","json","flavor_text_entries","flavor_text","split","join","console","log","t0","window","alert","finish","Spinner","animation","Card","Header","style","textTransform","name","Body","translated","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.193b420b.chunk.js","sourcesContent":["import React from 'react'\nimport { Form, Container, Button } from 'react-bootstrap'\n\n\nexport default function Search(props) {\n    \n    const [search, setSearch] = React.useState('')\n\n    return (\n        <Container>\n            <Form className=\"mt-3\">\n                <Form.Group className=\"align-items-center\">\n                        <Form.Control \n                        onChange={(e) => setSearch(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"Search for Pokemon\" />\n                        <Button className=\"mt-2\" block onClick={(e) => props.getPokemon(search)}>Click to Search</Button>\n                </Form.Group>\n            </Form>\n        </Container>\n        )\n    }","const baseUrl = 'https://pokeapi.co/api/v2'\nconst query = {\n    pokemon: 'pokemon-species'\n}\n\nexport async function fetchPokemon(pokemon) {\n    // console.log(`${baseUrl}/${query.pokemon}/${pokemon}`)\n    return fetch(`${baseUrl}/${query.pokemon}/${pokemon}`)\n}","const baseUrl = 'https://api.funtranslations.com/translate/shakespeare.json?text='\nconst query = {\n    contents: ''\n}\n\nexport async function fetchTranslation(translation) {\n    // console.log(`${baseUrl}/${query.pokemon}/${pokemon}`)\n    return fetch(`${baseUrl}${query.contents}${translation}`)\n}\n","import React from 'react'\nimport Search from '../components/Search'\nimport { fetchPokemon } from '../services/getPokemon'\nimport { fetchTranslation } from '../services/getTranslation'\nimport { Spinner } from 'react-bootstrap'\nimport {Card} from 'react-bootstrap'\n\n\nexport default function HomePage() {\n    \n    const [pokemon, setPokemon] = React.useState()\n    const [loading, setLoading] = React.useState(false)\n    const [translation, setTranslation] = React.useState()\n    var desc;\n    \n    const getPokemon = async (query) => {\n        try{\n        setLoading(true)\n        const response = await fetchPokemon(query)\n        // console.log(response)\n        const results = await response.json()\n        // console.log(results)\n        setPokemon(results)\n        desc = results.flavor_text_entries[0].flavor_text\n        // console.log(desc)\n        desc = desc.split('\\n').join(' ')\n        desc = desc.split(' ').join('%20')\n        const resp = await fetchTranslation(desc)\n        console.log(resp)\n        const res = await resp.json()\n        console.log(res)\n        setTranslation(res)\n        setLoading(false)}\n        catch (err) {\n            console.log('error')\n            window.alert(\"Sorry, you've either made a typo or you've hit the rate limit. Please either check your spelling or try again in an hour.\")\n\n        }\n        finally {\n            setLoading(false)\n        }\n        \n    }\n\n    return (\n        <div>\n            <Search getPokemon={getPokemon}/>\n            <h5>{}</h5>\n            {loading ? (<Spinner animation=\"border\" />) :null}\n            {!loading && pokemon ? (\n                <Card className=\"text-center\">\n                <Card.Header>\n                    <h5 style={{textTransform: 'uppercase'}}>{pokemon.name}</h5>\n                </Card.Header>\n                <Card.Body>\n                    <h6>DESCRIPTION:</h6>\n                    <span>{translation.contents.translated}</span>\n                </Card.Body>\n            </Card>\n            ): null}\n        </div>\n    )\n}","import React from 'react'\nimport './App.css';\n//import {Button} from 'react-bootstrap'\nimport HomePage from './pages/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}